mips32.cpp: In function ‘void find_basic_blocks(ir_code*)’:
mips32.cpp:34:77: error: no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(std::__cxx11::string*)’
                 used_labels.insert(new string(get_operand_name(code->op[0])));
                                                                             ^
In file included from /usr/include/c++/5/set:61:0,
                 from mips32.cpp:3:
/usr/include/c++/5/bits/stl_set.h:482:7: note: candidate: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const value_type& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:482:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘const value_type& {aka const std::__cxx11::basic_string<char>&}’
/usr/include/c++/5/bits/stl_set.h:491:7: note: candidate: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(std::set<_Key, _Compare, _Alloc>::value_type&&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(value_type&& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:491:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘std::set<std::__cxx11::basic_string<char> >::value_type&& {aka std::__cxx11::basic_string<char>&&}’
/usr/include/c++/5/bits/stl_set.h:519:7: note: candidate: std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::insert(std::set<_Key, _Compare, _Alloc>::const_iterator, const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, const value_type& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:519:7: note:   candidate expects 2 arguments, 1 provided
/usr/include/c++/5/bits/stl_set.h:524:7: note: candidate: std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::insert(std::set<_Key, _Compare, _Alloc>::const_iterator, std::set<_Key, _Compare, _Alloc>::value_type&&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, value_type&& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:524:7: note:   candidate expects 2 arguments, 1 provided
/usr/include/c++/5/bits/stl_set.h:539:2: note: candidate: template<class _InputIterator> void std::set<_Key, _Compare, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^
/usr/include/c++/5/bits/stl_set.h:539:2: note:   template argument deduction/substitution failed:
mips32.cpp:34:77: note:   candidate expects 2 arguments, 1 provided
                 used_labels.insert(new string(get_operand_name(code->op[0])));
                                                                             ^
In file included from /usr/include/c++/5/set:61:0,
                 from mips32.cpp:3:
/usr/include/c++/5/bits/stl_set.h:551:7: note: candidate: void std::set<_Key, _Compare, _Alloc>::insert(std::initializer_list<_Tp>) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]
       insert(initializer_list<value_type> __l)
       ^
/usr/include/c++/5/bits/stl_set.h:551:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘std::initializer_list<std::__cxx11::basic_string<char> >’
mips32.cpp:37:77: error: no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(std::__cxx11::string*)’
                 used_labels.insert(new string(get_operand_name(code->op[3])));
                                                                             ^
In file included from /usr/include/c++/5/set:61:0,
                 from mips32.cpp:3:
/usr/include/c++/5/bits/stl_set.h:482:7: note: candidate: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const value_type& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:482:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘const value_type& {aka const std::__cxx11::basic_string<char>&}’
/usr/include/c++/5/bits/stl_set.h:491:7: note: candidate: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(std::set<_Key, _Compare, _Alloc>::value_type&&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(value_type&& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:491:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘std::set<std::__cxx11::basic_string<char> >::value_type&& {aka std::__cxx11::basic_string<char>&&}’
/usr/include/c++/5/bits/stl_set.h:519:7: note: candidate: std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::insert(std::set<_Key, _Compare, _Alloc>::const_iterator, const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, const value_type& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:519:7: note:   candidate expects 2 arguments, 1 provided
/usr/include/c++/5/bits/stl_set.h:524:7: note: candidate: std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::insert(std::set<_Key, _Compare, _Alloc>::const_iterator, std::set<_Key, _Compare, _Alloc>::value_type&&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, value_type&& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:524:7: note:   candidate expects 2 arguments, 1 provided
/usr/include/c++/5/bits/stl_set.h:539:2: note: candidate: template<class _InputIterator> void std::set<_Key, _Compare, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^
/usr/include/c++/5/bits/stl_set.h:539:2: note:   template argument deduction/substitution failed:
mips32.cpp:37:77: note:   candidate expects 2 arguments, 1 provided
                 used_labels.insert(new string(get_operand_name(code->op[3])));
                                                                             ^
In file included from /usr/include/c++/5/set:61:0,
                 from mips32.cpp:3:
/usr/include/c++/5/bits/stl_set.h:551:7: note: candidate: void std::set<_Key, _Compare, _Alloc>::insert(std::initializer_list<_Tp>) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]
       insert(initializer_list<value_type> __l)
       ^
/usr/include/c++/5/bits/stl_set.h:551:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘std::initializer_list<std::__cxx11::basic_string<char> >’
mips32.cpp:50:76: error: no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::find(std::__cxx11::string*)’
             it = used_labels.find(new string(get_operand_name(code->op[0])));
                                                                            ^
In file included from /usr/include/c++/5/set:61:0,
                 from mips32.cpp:3:
/usr/include/c++/5/bits/stl_set.h:694:7: note: candidate: std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::find(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>]
       find(const key_type& __x)
       ^
/usr/include/c++/5/bits/stl_set.h:694:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘const key_type& {aka const std::__cxx11::basic_string<char>&}’
/usr/include/c++/5/bits/stl_set.h:698:7: note: candidate: std::set<_Key, _Compare, _Alloc>::const_iterator std::set<_Key, _Compare, _Alloc>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> >; std::set<_Key, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>]
       find(const key_type& __x) const
       ^
/usr/include/c++/5/bits/stl_set.h:698:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘const key_type& {aka const std::__cxx11::basic_string<char>&}’
make: *** [mips32.o] Error 1
